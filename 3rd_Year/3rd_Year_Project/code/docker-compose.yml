version: '3.9'

services:

  postgres_db:
    image: postgis/postgis
    ports:
      - 5432:5432
    #healthcheck:
    #  test: "pg_isready --dbname=vets-orgs-users && psql --dbname=vets-orgs-users --list"
    #  timeout: 10s
    #  retries: 20
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: "on-failure"
    networks:
      - save-animals-api
  
  frontend:
    build:
      context: ./frontend/project
      dockerfile: Dockerfile
    #command: npm run dev
    command: npm run dev
    volumes:
      - ./frontend/project:/app
      - /app/node_modules
    ports:
      - 5173:5173
      - 4173:4173
    env_file:
      - frontend/project/.env
    restart: "on-failure"
    networks:
      - save-animals-api

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 saving_animals/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: "on-failure"
    depends_on:
      - postgres_db
    #   condition: service_healthy
    # ["./wait-for-it.sh, postgres_db:5432", "--", "python3", "saving_animals/manage.py runserver 0.0.0.0:8000"]
    networks:
      - save-animals-api
  
  #nginx:
  #  build: ./frontend/project
  #  restart: always
  #  ports:
  #    - "80:80"
  #  env_file:
  #    - .env
  #  depends_on:
  #    - api
  #  networks:
  #    - save-animals-api

  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    command: flask run --host=0.0.0.0 -p 3000
    volumes:
      - ./flask:/app
    ports:
      - 3000:3000
    env_file:
      - flask/.env
    restart: "on-failure"
    depends_on:
      - api
    networks:
      - save-animals-api
  
  go_server:
    build:
      context: ./go_server
      dockerfile: Dockerfile
    command: ./go_server
    volumes:
      - ./go_server:/app
    ports:
      - 8080:8080
    restart: "on-failure"
    networks:
      - save-animals-api

networks:
  save-animals-api:
    driver: bridge

volumes:
  postgres_data:

